name: Pull request validation

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      changes-detected: ${{ steps.set-matrix.outputs.changes-detected }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            campaign-management:
              - 'campaign-management/**'
            firmware-management:
              - 'firmware-management/**'
            update-management:
              - 'update-management/**'
            vehicle-management:
              - 'vehicle-management/**'
            shared:
              - '.github/workflows/**'
              - 'shared/**'
              - '*.md'

      - name: Set matrix
        id: set-matrix
        run: |
          modules=()
          changed_modules=()
          
          # Check each module
          if [ "${{ steps.changes.outputs.campaign-management }}" == "true" ]; then
            modules+=("\"campaign-management\"")
            changed_modules+=("campaign-management")
          fi
          if [ "${{ steps.changes.outputs.firmware-management }}" == "true" ]; then
            modules+=("\"firmware-management\"")
            changed_modules+=("firmware-management")
          fi
          if [ "${{ steps.changes.outputs.update-management }}" == "true" ]; then
            modules+=("\"update-management\"")
            changed_modules+=("update-management")
          fi
          if [ "${{ steps.changes.outputs.vehicle-management }}" == "true" ]; then
            modules+=("\"vehicle-management\"")
            changed_modules+=("vehicle-management")
          fi
          
          # If shared files changed, build all modules
          if [ "${{ steps.changes.outputs.shared }}" == "true" ]; then
            echo "Shared files changed, building all modules"
            modules=("\"campaign-management\"" "\"firmware-management\"" "\"update-management\"" "\"vehicle-management\"")
            changed_modules=("campaign-management" "firmware-management" "update-management" "vehicle-management" "shared-files")
          fi
          
          if [ ${#modules[@]} -eq 0 ]; then
            echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT
            echo "changes-detected=false" >> $GITHUB_OUTPUT
          else
            printf -v joined '%s,' "${modules[@]}"
            echo "matrix={\"module\":[${joined%,}]}" >> $GITHUB_OUTPUT
            echo "changes-detected=true" >> $GITHUB_OUTPUT
          fi
          
          # Log what changed for debugging
          echo "Changed modules: ${changed_modules[*]}"

  build:
    needs: detect-changes
    if: needs.detect-changes.outputs.changes-detected == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ matrix.module }}-${{ hashFiles(format('{0}/**/pom.xml', matrix.module)) }}
          restore-keys: |
            ${{ runner.os }}-m2-${{ matrix.module }}-
            ${{ runner.os }}-m2-

      - name: Build ${{ matrix.module }}
        run: |
          cd ${{ matrix.module }}
          echo "Building module: ${{ matrix.module }}"
          
          # Check for Maven wrapper and use appropriate command
          if [ -f "./mvnw" ]; then
            echo "Using Maven wrapper in current directory"
            ./mvnw clean compile test package -B
          elif [ -f "../mvnw" ]; then
            echo "Using Maven wrapper in parent directory"
            ../mvnw clean compile test package -B
          else
            echo "Using system Maven"
            mvn clean compile test package -B
          fi
        env:
          MAVEN_OPTS: -Xmx1024m

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.module }}-test-results
          path: ${{ matrix.module }}/target/surefire-reports/
          retention-days: 7

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: ${{ matrix.module }}-jar
          path: ${{ matrix.module }}/target/*.jar
          retention-days: 7

  summary:
    needs: [detect-changes, build]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Build Summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.detect-changes.outputs.changes-detected }}" == "false" ]; then
            echo "✅ No relevant changes detected - no builds triggered" >> $GITHUB_STEP_SUMMARY
          else
            echo "### Modules Built" >> $GITHUB_STEP_SUMMARY
            echo "Matrix: ${{ needs.detect-changes.outputs.matrix }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          
            if [ "${{ needs.build.result }}" == "success" ]; then
              echo "✅ All module builds completed successfully" >> $GITHUB_STEP_SUMMARY
            elif [ "${{ needs.build.result }}" == "failure" ]; then
              echo "❌ One or more module builds failed" >> $GITHUB_STEP_SUMMARY
            elif [ "${{ needs.build.result }}" == "cancelled" ]; then
              echo "⚠️ Build was cancelled" >> $GITHUB_STEP_SUMMARY
            else
              echo "ℹ️ Build status: ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
            fi
          fi