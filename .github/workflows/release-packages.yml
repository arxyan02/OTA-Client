name: Publish Artifacts

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  publish:
    if: startsWith(github.head_ref, 'release-')
    name: Publish (${{ matrix.module }})
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        module: [
          'campaign-management',
          'firmware-management',
          'update-management',
          'vehicle-management'
        ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Configure Maven settings
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [{
              "id": "github",
              "username": "${{ github.actor }}",
              "password": "${{ secrets.GITHUB_TOKEN }}"
            }]

      - name: Get version from POM
        id: version
        working-directory: ${{ matrix.module }}
        run: |
          VERSION=$(mvn -q -DforceStdout help:evaluate -Dexpression=project.version)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "Detected version: $VERSION"

      - name: Echo module version
        run: echo "Publishing version ${{ steps.version.outputs.version }} for module ${{ matrix.module }}"

      - name: Build & test module
        working-directory: ${{ matrix.module }}
        run: |
          mvn -B -ntp clean verify

      - name: Deploy module to GitHub Packages
        if: github.event.pull_request.head.repo.full_name == github.repository
        working-directory: ${{ matrix.module }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn -B -ntp deploy

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.module }}-build
          path: |
            ${{ matrix.module }}/target/
            ${{ matrix.module }}/target/surefire-reports/
          retention-days: 5

  # Single aggregate result for branch protection
  publish-aggregate:
    name: Publish (overall)
    needs: publish
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Aggregate matrix result
        run: |
          result="${{ needs.publish.result }}"
          echo "publish matrix result: $result"
          if [ "$result" = "success" ] || [ "$result" = "skipped" ]; then
            exit 0
          else
            exit 1
          fi

  publish-summary:
    name: Publish Summary
    needs: publish
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Publish Summary
        run: |
          echo "## 📦 Multi-Module Publish Results" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "**Branch:** ${{ github.head_ref }}" >> "$GITHUB_STEP_SUMMARY"
          echo "**PR:** #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}" >> "$GITHUB_STEP_SUMMARY"
          echo "**Matrix Status:** ${{ needs.publish.result }}" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          if [ "${{ needs.publish.result }}" = "success" ]; then
            echo "✅ All modules built/tests passed. (Deploy ran for internal PRs only)" >> "$GITHUB_STEP_SUMMARY"
          elif [ "${{ needs.publish.result }}" = "skipped" ]; then
            echo "ℹ️ No modules were executed." >> "$GITHUB_STEP_SUMMARY"
          else
            echo "❌ One or more modules failed. Check job logs for details." >> "$GITHUB_STEP_SUMMARY"
          fi